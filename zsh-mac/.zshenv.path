#- [mac]PATH environment settings
#-- dmg経由でjavaをインストールした場合はJAVA_HOME関連の設定は不要
#jdk_version="1.8.0_25"
#export JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk${jdk_version}.jdk/Contents/Home"
export SCALA_HOME=/usr/local/scala
export ANDROID_SDK="/Applications/Android Studio.app/sdk"
export PLAY_HOME=/usr/local/play
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PYENV_ROOT=$HOME/.pyenv
export ANACONDA3=$HOME/anaconda3
export GCP_SDK_HOME=$HOME/google-cloud-sdk
python_version=2.7
redis_version=2.8

#-- zshではシェル変数として"path"を定義すると環境変数PATHと自動連動する
#-- "path"以外に, "cdpath","fpath","manpath" の3つも同様に自動連動
#-- (N-/) を付けた場合、該当パスが存在しなければ無視してくれる
path=(
    #$JAVA_HOME/bin(N-/)
    $HOME/bin(N-/)
    # Omnisharp by NeoBundle of vim
    $HOME/.bundle/Omnisharp/server/OmniSharp/bin/Debug(N-/)
    /usr/local/mysql/bin(N-/)
    /usr/local/redis-${redis_version}/bin(N-/)
    /usr/local/redis/bin(N-/)
    $HOME/.cabal/bin(N-/)
    $HOME/.rbenv/bin(N-/)
    $GOROOT/bin(N-/)
    $GOBIN(N-/)
    $HOME/.anyenv/bin(N-/)
    $HOME/.ndenv/bin(N-/)
    $HOME/.nodebrew/current/bin(N-/)
    $PYENV_ROOT/bin(N-/)
    #$ANACONDA3/bin(N-/)
    $HOME/Library/Python/${python_version}/bin(N-/)
    $GCP_SDK_HOME/bin(N-/)
    $SCALA_HOME/bin(N-/)
    $ANDROID_SDK/platform-tools(N-/)
    $PLAY_HOME(N-/)
    {/usr/local,/usr,}/bin(N-/)
    {/usr/local,/usr,}/sbin(N-/)
    )
fpath=($HOME/zsh-functions(N-/) $fpath)
manpath=({$HOME/local,/usr/local,/usr}/share/man(N-/))
sudo_path=({,/usr,/usr/local}/sbin(N-/))

#- typeset = declare
#-- typeset -U : 重複要素削除
typeset -U path
typeset -U manpath
#-- typeset -xT : -Tで(シェル変数と環境変数の)2変数の連動関係を築く, -xで環境変数として自動export(第1引数を)
typeset -xT SUDO_PATH sudo_path
typeset -U sudo_path

#- cdpath
#-- `cd hoge/huga` で $GOPATH/src/github.com/hoge/huga へcd出来るようにする
cdpath=(
    $GOPATH/src/github.com/goldeneggg(N-/)
    $GOPATH/src/github.com(N-/)
    $GOPATH/src/code.google.com/p(N-/)
    )

#- rbenv
[[ -s "$HOME/.rbenv/bin/rbenv" ]] && eval "$(rbenv init -)"

#- ndenv
[[ -s "$HOME/.ndenv/bin/ndenv" ]] && eval "$(ndenv init -)"

#- anyenv
[[ -s "$HOME/.anyenv/bin/anyenv" ]] && eval "$(anyenv init -)"

# pyenv
[[ -s "$HOME/.pyenv/bin/pyenv" ]] && eval "$(pyenv init -)"
