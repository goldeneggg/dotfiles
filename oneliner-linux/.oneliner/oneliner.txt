while true ;do ls /proc/`ps -ef | grep %%PROC_NAME | grep -v grep | awk '{print $2}'`/fd | wc -l ;sleep 1 ;done	特定のプロセスが使用しているファイルディスクリプタを1秒ごとに表示
watch --interval=1 'netstat -ent | grep %%WORD'	#TCPの通信発生を1秒毎に確認
openssl x509 -in %%CRTFILE -text | grep Not	#SSL証明書の期限確認
openssl s_client -connect %%DOMAIN:443 -showcerts	#SSL証明書の内容表示
ssh-keygen -t rsa -f /home/%%USER/.ssh/%%RSAFILE -q -N ""	#ノンパスSSH鍵を作成
ssh -t %%GATEWAY sudo -u admin ssh %%TARGET	GATEWAYからの多段ssh時にsudoする
mysqldump -u %%USER -p -r %%OUTPUTFILE -e %%DB %%TABLE	#mysqldump基本形
mysqldump -u %%USER -p -h %%HOST -P%%PORT -S %%SOCKET_FILE -r %%OUTPUTFILE -e %%DB %%TABLE	#mysqldump ホスト・ポート・ソケットファイル指定
mysqldump -u %%USER -p -r %%OUTPUTFILE -d %%DB %%TABLE	#mysqldump DDLのみ
mysqldump -u %%USER -p -r %%OUTPUTFILE -t %%DB %%TABLE	#mysqldump データのみ
mysqldump -u %%USER -p -T %%OUTPUTDIR %%DB %%TABLE	#mysqldump OUTPUTDIRへDDL(sql)とデータ(tsv)を別々に出力
wget --user=%%USER --password=%%PASS %%URL	#wget BASIC認証有り
du /home --max-depth=1 | sort -nr	#/home直下の使用容量を降順表示
du -h | egrep '^[0-9\.]+M' | sort -nr	#MB以上のサイズのファイル・ディレクトリを降順表示
find . -type f -daystart -ctime -1 | xargs ls -lrt	#カレントディレクトリ下の当日更新されたファイルを再帰的に検索して日時昇順で表示
sudo ssh -N -f -L 80:%%WEBSERVER:80 %%USER@%%GATEWAY	#[mac]ポート80をGATEWAYを介してlocalforward
vi $(grep -n -i %%STR %%TARGET | peco | awk -F ":" '{print "-c "$2" "$1}')	#pecoを使用して、vimでgrep結果を行番号指定付きで開く
vi $(grep -n -i %%STR %%TARGET | grep -v "[0-9]:\s*//" | peco | awk -F ":" '{print "-c "$2" "$1}')	##pecoを使用して、vimでgrep結果(コメント行は除去する)を行番号指定付きで開く grep ver2.5以降必須
vi $(grep -n -i %%STR **/*.go | grep -v "[0-9]:\s*//" | peco | awk -F ":" '{print "-c "$2" "$1}')	#[golang]pecoを使用して、vimでgrep結果(コメント行は除去する)を行番号指定付きで開く grep ver2.5以降必須
sudo strace -s 1024 -f -p %%PID	#指定したPIDのプロセスのUNIXドメインソケット通信内容を確認する
vi $(grep -n "\sgo .*(" **/*.go | grep -v "[0-9]:\s*//" | peco | awk -F ":" '{print "-c "$2" "$1}')	#[golang]ゴルーチンを起動しているgoのソースを検索して、行番号指定でviで開く
grep -n "\sgo .*(" **/*.go | grep -v "[0-9]:\s*//" | awk -F ":" '{print $1}' | sort | uniq -c | sort -r	#[golang] Go本体のソースでゴルーチンを起動している箇所数,GOROOT/src/pkgディレクトリ下で実行する
df -i	#割り当て可能な(Inodes),使用中の(IUsed),未割り当ての(IFree)inode数を表示する
stat %%FILE	#ファイルの詳細な統計情報を表示する。inode番号とか
find / -xdev -type f	#xdevオプションで、 / ファイル・システムのみに限定して検索する,xdevが無い場合/usrとか/varとかNFS等の他のファイルシステムも検索対象になる
sudo echo %%NUM > /proc/sys/vm/drop_caches	#ファイルシステムのキャッシュをクリアする(1=ページキャッシュ,2=ディレクトリエントリ(dentry)とinode,3=1と2の両方)
grep Dirty /proc/meminfo	#ダーティオブジェクトのサイズを表示する
sync	#バッファ(メモリ上のデータ)の内容を強制的にディスクに書き込みバッファをフラッシュし)、ダーティオブジェクトをクリアする
lsof | grep deleted	#プロセスが"使用していて途中で削除した"ファイル一覧を表示する
lsof -c %%PNAME	#指定したプロセス名のプロセスで使用しているファイル一覧を表示する
lsof -p %%PID	#指定したPIDのプロセスで使用しているファイル一覧を表示する
lsof -i:%%PORT	#指定したポートをlistenしているプロセス・ファイル一覧を表示する
lsof -a %%COND1 %%COND2	#複数条件をAND条件で指定してプロセス・ファイル一覧を表示する,-a無しで複数条件を記述した場合はOR条件になる
pgrep -fl %%STR	#プロセスをSTRで検索し、PIDとコマンドラインを一覧表示する
cp /proc/%%PID/fd/%%FD %%TOFILE	#プロセスで使用中のファイルを削除したが復元したい場合、TOFILEで指定したファイルパスに復元する
dig -f %%DIGFILE	#digコマンドを羅列したファイルを指定してバッチモードでdigを実行する,バッチモード用ファイルの記法やオプションは通常のコマンド実行時と同じ
mysqlbinlog --start-datetime '%%START' --stop-datetime '%%STOP' %%BINLOGPATH	#from,to日時指定でbinlogの内容を確認する
mysqlbinlog --start-position '%%START' --stop-position '%%STOP' %%BINLOGPATH	#from,toポジション指定でbinlogの内容を確認する
mysqlbinlog --start-position '%%START' --stop-position '%%STOP' %%BINLOGPATH | mysql -u %%USER -p %%DB	#from,toポジション指定でbinlogの内容を取得しDBに流し込む（リカバリ用途）
for v in $(vagrant status | grep %%VMSTR | awk '{print $1}'); do echo "=== $v" && vagrant ssh -c '%%CMD' $v; done	#[vagrant]VMSTRにmatchする全てのvmでCMDを実行する,vagrantコマンド使用
for v in $(VBoxManage list runningvms | grep %%VMSTR | awk -F"_" '{print $2}'); do echo "=== $v" && vagrant ssh -c '%%CMD' $v; done	#[vagrant]VMSTRにmatchする全てのvmでCMDを実行する,VBoxManage使用
