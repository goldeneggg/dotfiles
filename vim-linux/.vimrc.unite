"==================== Unite
" http://mba-hack.blogspot.jp/2013/03/unitevim.html
" http://qiita.com/hide/items/77b9c1b0f29577d60397

"========== Unite base mapping
nnoremap [unite] <Nop>
nmap     ,u [unite]

"========== settings
" 結果表示をinsertモードで開始
let g:unite_enable_start_insert=1
" 大文字小文字を区別しない
let g:unite_enable_ignore_case = 1
let g:unite_enable_smart_case = 1
" 最近開いたファイル一覧の最大数
let g:unite_source_file_mru_limit = 200
" dotfileも表示対象にする TODO
"call unite#custom#source('file', 'matchers', 'matcher_default')
"call unite#custom#source('grep', 'matchers', 'matcher_default')
" 無視パターンをスクリプト変数で定義
let s:unite_ignore_patterns=
  \ ''
  \ .'vendor/bundle\|\.bundle/\|log/\|public/\|tmp/\|'
  \ .'.vim/\|'
  \ .'node_modules/\|'
  \ .'\.\(gif\|jpe\?g\|png\|bmp\|pdf\|webp\)$'

"========== keymap
" カレントディレクトリ下一覧
nnoremap <silent> [unite]c :<C-u>UniteWithCurrentDir -buffer-name=curdir-buffer buffer bookmark file<CR>
" バッファ一覧
nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
" 最近開いたファイル
nnoremap <silent> [unite]m :<C-u>Unite file_mru<CR>
" バッファ + 最近開いたファイル
nnoremap <silent> [unite]u :<C-u>Unite buffer file_mru<CR>
" 現在開いているファイルのディレクトリ下一覧
nnoremap <silent> [unite]a :<C-u>UniteWithBufferDir -buffer-name=bufdir-buffer buffer bookmark file<CR>

"========== grep
let g:unite_source_grep_max_candidates = 200
let g:unite_source_grep_recursive_opt = ''

" grep command
if executable('hw')
  " Use hw (highway)
  " https://github.com/tkengo/highway
  let g:unite_source_grep_command = 'hw'
  let g:unite_source_grep_default_opts = '--no-group --no-color'
  let g:unite_source_grep_recursive_opt = ''
elseif executable('ag')
  " Use ag (the silver searcher)
  " https://github.com/ggreer/the_silver_searcher
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts =
    \ '-i --vimgrep --hidden --ignore ' .
    \ '''.hg'' --ignore ''.svn'' --ignore ''.git'' --ignore ''.bzr'''
  let g:unite_source_grep_recursive_opt = ''
elseif executable('ack')
  " Use ack
  let g:unite_source_grep_command = 'ack'
  let g:unite_source_grep_default_opts = '-i --no-heading --no-color -k -H'
endif

nnoremap <silent> ,/ :Unite grep:. -buffer-name=search-buffer<CR>
" カーソル上の単語で検索
nnoremap <silent> ,g :UniteWithCursorWord grep:. -buffer-name=search-buffer<CR>
" 検索結果を再度呼び出し
nnoremap <silent> ,r  :<C-u>UniteResume search-buffer<CR>

"========== line
nnoremap <silent> ,l :<C-u>Unite -buffer-name=line-buffer line:all -no-quit<CR>


"========== like CtrlP
call unite#custom#source('file_rec/async', 'ignore_pattern', s:unite_ignore_patterns)
call unite#custom#source('file_rec/git', 'ignore_pattern', s:unite_ignore_patterns)

" gitプロジェクトのdirの場合は file_rec/git を使う
function! UniteFileRecAsyncOrGit()
  if isdirectory(getcwd()."/.git")
    Unite file_rec/git
  else
    Unite file_rec/async
  endif
endfunction
nnoremap ,p :<C-u>call UniteFileRecAsyncOrGit()<CR>
